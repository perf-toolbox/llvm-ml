module(
    name = "llvm-ml",
    version = "0.1",
)

bazel_dep(name = "bazel_skylib", version = "1.4.2")
bazel_dep(name = "rules_cc", version = "0.0.9")
bazel_dep(name = "rules_python", version = "0.26.0")
bazel_dep(name = "rules_foreign_cc", version = "0.9.0")
bazel_dep(name = "platforms", version = "0.0.8")
bazel_dep(name = "rules_pkg", version = "0.9.1")
bazel_dep(name = "nlohmann_json", version = "3.11.2")
bazel_dep(name = "catch2", version = "3.4.0")
bazel_dep(name = "robin-map", version = "1.2.1")
bazel_dep(name = "llvm", version = "")
bazel_dep(name = "rules_wheel")
bazel_dep(name = "rules_cpp", version = "0.0.1")

local_path_override(
    module_name = "rules_wheel",
    path = "utils/rules_wheel",
)

local_path_override(
    module_name = "llvm",
    path = "third_party/llvm",
)

non_module_dependencies = use_extension("//bazel:extensions.bzl", "non_module_dependencies")
use_repo(non_module_dependencies, "capnp-cpp", "nanobind", "range-v3")

llvm_non_module = use_extension("@llvm//:extensions.bzl", "non_module_dependencies")
use_repo(llvm_non_module, "llvm_zstd")

llvm = use_extension("@llvm//:llvm.bzl", "init_llvm")
use_repo(llvm, "llvm-project")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,
    python_version = "3.11",
)
use_repo(python, "python_3_11", "python_versions")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pip",
    python_version = "3.11",
    requirements_lock = "//:requirements_lock_3_11.txt",
    requirements_windows = "//:requirements_windows_3_11.txt",
)
use_repo(pip, "pip")

git_override(
    module_name = "rules_cpp",
    commit = "cb0b66a4fba52588500cf41d38c9fbd59b1b55ad",
    remote = "https://github.com/alexbatashev/rules_cpp",
)

cpp = use_extension("@rules_cpp//cpp:extension.bzl", "cpp")
cpp.llvm(
    name = "llvm-17",
    version = "17.0.6",
)
use_repo(cpp, "llvm-17")
